# GET /v1/pix/{ispb}/dict/entries | scope: read-entries-dict
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRole
metadata:
  name: "dict-entries-get"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  rules:
  - services: ["$CI_PROJECT_NAME.$PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME.svc.cluster.local"]
    methods: ["GET"]
    paths: ["/v1/pix*"]
---
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRoleBinding
metadata:
  name: "dict-entries-get"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  roleRef:
    kind: ServiceRole
    name: "dict-entries-get"
  subjects:
  - properties:
      request.auth.claims[roles]: "dict-entries-get"
---
# GET /v1/pix/dict/entries/{id} | scope: read-entries-dict
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRole
metadata:
  name: "dict-entries-id-get"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  rules:
  - services: ["$CI_PROJECT_NAME.$PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME.svc.cluster.local"]
    methods: ["GET"]
    paths: ["/v1/pix/dict/entries*"]
---
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRoleBinding
metadata:
  name: "dict-entries-id-get"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  roleRef:
    kind: ServiceRole
    name: "dict-entries-id-get"
  subjects:
  - properties:
      request.auth.claims[roles]: "dict-entries-id-get"
---
# GET /v1/pix/{ispb}/dict/entries/by-bank-account | scope: read-entries-dict
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRole
metadata:
  name: "dict-entries-by-bank-account-get"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  rules:
  - services: ["$CI_PROJECT_NAME.$PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME.svc.cluster.local"]
    methods: ["GET"]
    paths: ["/v1/pix*"]
---
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRoleBinding
metadata:
  name: "dict-entries-by-bank-account-get"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  roleRef:
    kind: ServiceRole
    name: "dict-entries-by-bank-account-get"
  subjects:
  - properties:
      request.auth.claims[roles]: "dict-entries-by-bank-account-get"
---
# POST /v1/pix/{ispb}/dict/entries | scope: create-entries-dict
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRole
metadata:
  name: "dict-entries-create"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  rules:
  - services: ["$CI_PROJECT_NAME.$PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME.svc.cluster.local"]
    methods: ["POST"]
    paths: ["*/entries"]
---
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRoleBinding
metadata:
  name: "dict-entries-create"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  roleRef:
    kind: ServiceRole
    name: "dict-entries-create"
  subjects:
  - properties:
      request.auth.claims[roles]: "dict-entries-create"
---
# PUT /v1/pix/{ispb}/dict/entries | scope: alter-entries-dict
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRole
metadata:
  name: "dict-entries-update"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  rules:
  - services: ["$CI_PROJECT_NAME.$PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME.svc.cluster.local"]
    methods: ["PUT"]
    paths: ["*/entries"]
---
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRoleBinding
metadata:
  name: "dict-entries-update"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  roleRef:
    kind: ServiceRole
    name: "dict-entries-update"
  subjects:
  - properties:
      request.auth.claims[roles]: "dict-entries-update"
---
# DELETE /v1/pix/{ispb}/dict/entries | scope: remove-entries-dict
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRole
metadata:
  name: "dict-entries-delete"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  rules:
  - services: ["$CI_PROJECT_NAME.$PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME.svc.cluster.local"]
    methods: ["DELETE"]
    paths: ["/v1/pix*"]
---
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRoleBinding
metadata:
  name: "dict-entries-delete"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  roleRef:
    kind: ServiceRole
    name: "dict-entries-delete"
  subjects:
  - properties:
      request.auth.claims[roles]: "dict-entries-delete"
---
# GET /v1/pix/{ispb}/dict/claims | scope: read-claims-dict
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRole
metadata:
  name: "dict-claims-get"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  rules:
  - services: ["$CI_PROJECT_NAME.$PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME.svc.cluster.local"]
    methods: ["GET"]
    paths: ["/v1/pix*"]
---
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRoleBinding
metadata:
  name: "dict-claims-get"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  roleRef:
    kind: ServiceRole
    name: "dict-claims-get"
  subjects:
  - properties:
      request.auth.claims[roles]: "dict-claims-get"
---
# GET /v1/pix/{ispb}/dict/claims/{id} | scope: read-claims-dict
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRole
metadata:
  name: "dict-claims-get-id"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  rules:
  - services: ["$CI_PROJECT_NAME.$PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME.svc.cluster.local"]
    methods: ["GET"]
    paths: ["/v1/pix*"]
---
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRoleBinding
metadata:
  name: "dict-claims-get-id"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  roleRef:
    kind: ServiceRole
    name: "dict-claims-get-id"
  subjects:
  - properties:
      request.auth.claims[roles]: "dict-claims-get-id"
---
# POST /v1/pix/{ispb}/dict/claims | scope: create-claims-dict
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRole
metadata:
  name: "dict-claims-create"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  rules:
  - services: ["$CI_PROJECT_NAME.$PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME.svc.cluster.local"]
    methods: ["POST"]
    paths: ["*/claims"]
---
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRoleBinding
metadata:
  name: "dict-claims-create"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  roleRef:
    kind: ServiceRole
    name: "dict-claims-create"
  subjects:
  - properties:
      request.auth.claims[roles]: "dict-claims-create"
---
# PUT /v1/pix/{ispb}/dict/claims | scope: alter-claims-dict
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRole
metadata:
  name: "dict-claims-update"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  rules:
  - services: ["$CI_PROJECT_NAME.$PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME.svc.cluster.local"]
    methods: ["PUT"]
    paths: ["*/claims"]
---
apiVersion: rbac.istio.io/v1alpha1
kind: ServiceRoleBinding
metadata:
  name: "dict-claims-update"
  namespace: $PROJECT_NAMESPACE-$CI_COMMIT_REF_NAME
spec:
  roleRef:
    kind: ServiceRole
    name: "dict-claims-update"
  subjects:
  - properties:
      request.auth.claims[roles]: "dict-claims-update"
---
